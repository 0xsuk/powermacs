;; (use-package pretty-hydra)

(defhydra hydra-nav (:hint nil)
  "
  _b__f__p__n_ ←→↑↓   _h_/_j_ word   _a_/_e_ b/eol   _d_/_r_ del
  _o_ther-frame-or-window   _y_ank        _u_/_U_ndo/redo
  _k_/_w_/_H_/_J_ kill line/region/lw/rw      _P_/_N_ move-line-or-region
  _=_/_-_ expand/contract     _SPC_ mark    _D_/_W_ dup/copy line/region
---------------------------------------------------------------
  _m_ark-ring    _s_wiper     _g_oto-word   _q_u_i_t
      "
  ("f"   forward-char)
  ("F"   forward-sexp)
  ("b"   backward-char)
  ("B"   backward-sexp)
  ("p"   previous-line)
  ("n"   next-line)
  ("a"   xah-beginning-of-line-or-block)
  ("e"   xah-end-of-line-or-block)
  ("A"   beginning-of-defun)
  ("E"   end-of-defun)
  ("h"   left-word)
  ("j"   right-word)
  ("H"   backward-kill-word)
  ("J"   kill-word)
  ("w"   kill-region)
  ("W"   kill-ring-save)
  ("u"   undo-tree-undo)
  ("U"   undo-tree-redo)
  ("d"   delete-char)
  ("o"   other-window-or-frame)
  ("y"   yank)
  ("t"   transpose-chars)
  ("k"   kill-line)
  ("C"   comment-or-uncomment-region-or-line)
  ("P"   elpy-nav-move-line-or-region-up)
  ("N"   elpy-nav-move-line-or-region-down)
  ("D"   duplicate-current-line-or-region)
  ("z"   zap-to-char)
  ("q"   nil)
  ("x"   quit-and-send-C-x :color blue)
  ("c"   quit-and-send-C-c :color blue)
  ("r"   backward-delete-char-untabify)
  ("l"   recenter-top-bottom)
  ("v"   scroll-up-command)
  ("V"   scroll-down-command)
  (","   set-mark-and-deactive)
  ("."   exchange-point-and-mark)
  ("="   er/expand-region)
  ("-"   er/contract-region)
  ("SPC" set-mark-command)
  ("g"   avy-goto-word-1 :color blue)
  ("i"   nil :color blue)
  ("s"   swiper :color blue) ;; blue is sadly needed!
  ("S"   save-buffer)
  ("K"   volatile-kill-buffer)
  ("m"   counsel-mark-ring :color blue)
  ("ESC" nil)
  ("<f9>" nil)
  )
